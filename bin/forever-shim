#!/usr/bin/env node

const argv = require('minimist')(process.argv);

let hookPath;

const path = require('path');
const fs = require('fs');
const existsSync = fs.existsSync || path.existsSync;

if (argv['src']) {
	const src = argv['src'];
	// 1'st guess, this is path to file or module, i.e. just existent path
	hookPath = path.resolve(src);
	if (!existsSync(hookPath)) {
		// 2'nd guess, process module?
		hookPath = `${process.cwd()}/node_modules/${src}`;
		if (!existsSync(hookPath)) {
			// 3'nd guess, no idea, let require to resoolve it
			hookPath = src;
		}
	}
}

const Hook = require(hookPath);

const keys = Object.keys(Hook);

//
// Remark: Assume the first class exported extends from Hook
//

//
// TODO: Refactor this convention, it's a bit brittle
//
let hookClass = keys[0];
if (keys.length > 1) {
  hookClass = 'Hook';
}
const hook = new Hook[hookClass](argv);

hook.start();
